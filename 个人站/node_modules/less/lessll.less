//引入var.less文件
@import "var.less";
  //将边宽设置在盒子宽度里面
  *{
    box-sizing: border-box;
  }
  //既是类又是方法 &代表父元素
  //.contaner固定外宽  .row自动撑大盒子(里面是浮动的元素)   .contaner-fuild（里面是row）
  .container{
    //固定布局
    &{
      margin:auto;
     width:@num1*1px-245px;
    }
    //流式布局
    &-fuild{
    width: 100%;
    }
    &>.row{
     width:100%;height:auto;
      .clearfix
    }
    &-fuild>.row{
      width:100%;height:auto;
      .clearfix
    }
}
//整个布局  最外围容器设定固定宽度 内部的流式布局设定百分比宽度  流式布局的宽度肯定是百分比的
//         &>.row设置百分比宽度 并且让其高度自动撑开
//         &-fuild>.row也设置百分比高度   也让其高度自动撑开
//         响应式整个思路就是利用设置百分比高度的方式，使其自由变换




//loop循环 通过@type传参
//   > 表示该元素下面的子元素
.loop(@type:s,@i:1) when (@i<=@colNum){
  .container>.row>.col-@{type}-@{i}{
     width:@i/@colNum*100%;
    float:left;
  }
  .container-fuild>.row>.col-@{type}-@{i}{
    width:@i/@colNum*100%;
    float:left;
  }
  .loop(@type,@i+1)
}
/*小屏*/
.loop();
.container>.row>.col-s-hide{
  display: none;
}
.container-fuild>.row>.col-s-hide{
  display: none;
}
/*中屏*/
@media screen and (min-width: @num1){
  .container{
    width:@num1;
  }
  .loop(m);
  .container>.row>.col-s-hide{
    display: block;
  }
  .container>.row>.col-l-hide{
    display: block;
  }
  .container>.row>.col-m-hide{
    display: none;
  }

  .container-fuild>.row>.col-s-hide{
    display: block;
  }
  .container-fuild>.row>.col-l-hide{
    display: block;
  }
  .container-fuild>.row>.col-m-hide{
    display: none;
  }
}
/*大屏*/
//@media screen and (min-width: @num2){
//  .container{
//    width:@num2;
//  }
//  .loop(l);
//
//  .container>.row>.col-s-hide{
//    display: block;
//  }
//  .container>.row>.col-m-hide{
//    display: block;
//  }
//  .container>.row>.col-l-hide{
//    display: none;
//  }
//
//  .container-fuild>.row>.col-s-hide{
//    display: block;
//  }
//  .container-fuild>.row>.col-m-hide{
//    display: block;
//  }
//  .container-fuild>.row>.col-l-hide{
//    display: none;
//  }
//}


//CSS 3 让父元素自动撑开的方法
//用 空元素的clear:both; 和overflow:hidden; 会有其他影响
.clearfix(){
   &:before,&:after{
     content:"";
     display: block;
     clear:both;
   }

}